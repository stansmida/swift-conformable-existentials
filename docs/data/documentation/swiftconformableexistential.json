{"abstract":[{"type":"text","text":"A set of Swift Macros designed to facilitate the conformance of existential types to"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"type":"text","text":", "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Articles","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign"]},{"identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)"],"title":"Existential conformance macros"},{"identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding"],"title":"Coding support"},{"title":"Extended Modules","identifiers":["doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift"]}],"variants":[{"paths":["\/documentation\/swiftconformableexistential"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"inlineContent":[{"type":"text","text":"Until Swift gains support for "},{"type":"reference","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"they cannot satisfy generic constraints on their own."}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["protocol Drinkable: Hashable {}","","\/\/ Is ill-formed, because `any Drinkable` does not conform to `Hashable`,","\/\/ despite the fact that every `Drinkable` instance does.","struct Foo: Hashable {","    let drinkable: any Drinkable","}"]},{"type":"paragraph","inlineContent":[{"text":"Overcoming this limitation requires extensive boilerplate code. This package offers a set of macros","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"that can be attached to your protocol to synthesize ready-to-use property wrappers over the existential"},{"text":" ","type":"text"},{"type":"text","text":"type of the annotated protocol. These wrappers act as proxies for the respective conformances."}]},{"type":"codeListing","syntax":"swift","code":["import SwiftConformableExistential","","@HashableExistential","protocol Drinkable: Hashable {}","","\/\/ `HashableDrinkable` is a `Hashable` wrapper over `any Drinkable`,","\/\/ synthesized of the attached `@HashableExistential` macro,","\/\/ allowing the compiler to now synthesize the `Hashable` implementation for `Foo`.","struct Foo: Hashable {","","    @HashableDrinkable","    var drinkable: any Drinkable","}"]},{"type":"paragraph","inlineContent":[{"text":"Alternatively, the wrappers can also be used on-the-fly, particularly in situations where","type":"text"},{"type":"text","text":" "},{"type":"text","text":"employing property wrappers is not suitable:"}]},{"type":"codeListing","syntax":"swift","code":["struct Tap: View {","","    @State private var drinkable: any Drinkable = .smallBeer","    ","    var body: some View {","        ...           ","        .onChange(of: HashableDrinkable(drinkable)) { _, newValue in","            prepareForPouring(newValue.wrappedValue)","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials"},{"type":"text","text":" to gain all the knowledge you need for the best hands-on experience."}]},{"type":"paragraph","inlineContent":[{"code":"SwiftConformableExistential","type":"codeVoice"},{"type":"text","text":" is distributed as a SwiftPM package at"},{"text":" ","type":"text"},{"identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","isActive":true,"type":"reference"},{"text":".","type":"text"}]}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","identifier":{"url":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","interfaceLanguage":"swift"},"sections":[],"metadata":{"roleHeading":"Framework","modules":[{"name":"SwiftConformableExistential"}],"externalID":"SwiftConformableExistential","role":"collection","title":"SwiftConformableExistential","symbolKind":"module"},"references":{"doc://SwiftConformableExistential/documentation/SwiftConformableExistential":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential","kind":"symbol","url":"\/documentation\/swiftconformableexistential","abstract":[{"text":"A set of Swift Macros designed to facilitate the conformance of existential types to","type":"text"},{"text":" ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":", "},{"code":"Encodable","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Codable"},{"text":".","type":"text"}],"title":"SwiftConformableExistential","type":"topic","role":"collection"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableDecodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableDecodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Hashable & Decodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}],"url":"\/documentation\/swiftconformableexistential\/hashabledecodableexistential(accessmodifier:)","title":"HashableDecodableExistential(accessModifier:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HashableDecodableExistential"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableDecodableExistential(accessModifier:)":{"kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableDecodableExistential(accessModifier:)","role":"symbol","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"EquatableDecodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Synthetizes "},{"code":"Equatable & Decodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"url":"\/documentation\/swiftconformableexistential\/equatabledecodableexistential(accessmodifier:)","type":"topic","title":"EquatableDecodableExistential(accessModifier:)"},"https://github.com/apple/swift-evolution/blob/main/proposals/0335-existential-any.md#extending-existential-types":{"type":"link","identifier":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","titleInlineContent":[{"text":"extending existential types","type":"text"}],"url":"https:\/\/github.com\/apple\/swift-evolution\/blob\/main\/proposals\/0335-existential-any.md#extending-existential-types","title":"extending existential types"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableExistential(accessModifier:)":{"type":"topic","role":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Hashable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"kind":"symbol","title":"HashableExistential(accessModifier:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"HashableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/swiftconformableexistential\/hashableexistential(accessmodifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Essentials":{"abstract":[],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Essentials","type":"topic","title":"Essentials","url":"\/documentation\/swiftconformableexistential\/essentials","kind":"article","role":"article"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableCodableExistential(accessModifier:)":{"title":"HashableCodableExistential(accessModifier:)","type":"topic","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Hashable & Codable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableCodableExistential(accessModifier:)","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HashableCodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftconformableexistential\/hashablecodableexistential(accessmodifier:)","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/ProtocolMetatypeRepresentable":{"navigatorTitle":[{"text":"ProtocolMetatypeRepresentable","kind":"identifier"}],"abstract":[{"text":"A type that can be converted to and from an associated value where the value","type":"text"},{"type":"text","text":" "},{"text":"is meant to be a protocol metatype.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ProtocolMetatypeRepresentable","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/ProtocolMetatypeRepresentable","url":"\/documentation\/swiftconformableexistential\/protocolmetatyperepresentable","type":"topic","title":"ProtocolMetatypeRepresentable","kind":"symbol","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableCodableExistential(accessModifier:)":{"url":"\/documentation\/swiftconformableexistential\/equatablecodableexistential(accessmodifier:)","title":"EquatableCodableExistential(accessModifier:)","role":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EquatableCodableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableCodableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"code":"Equatable & Codable","type":"codeVoice"},{"text":" property wrapper variants (regular, mutable, optional, collection and their combinations)","type":"text"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"type":"topic","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaDecoding":{"navigatorTitle":[{"kind":"identifier","text":"MetaDecoding"}],"abstract":[{"text":"A type that decodes meta information.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetaDecoding","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaDecoding","url":"\/documentation\/swiftconformableexistential\/metadecoding","type":"topic","title":"MetaDecoding","kind":"symbol","role":"symbol"},"https://github.com/stansmida/swift-conformable-existential.git":{"type":"link","identifier":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","title":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","url":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git","titleInlineContent":[{"type":"text","text":"https:\/\/github.com\/stansmida\/swift-conformable-existential.git"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaEncoding":{"kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaEncoding","type":"topic","url":"\/documentation\/swiftconformableexistential\/metaencoding","title":"MetaEncoding","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"MetaEncoding","kind":"identifier"}],"abstract":[{"text":"A type that encodes meta information.","type":"text"}],"navigatorTitle":[{"text":"MetaEncoding","kind":"identifier"}]},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableExistential(accessModifier:)","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}],"url":"\/documentation\/swiftconformableexistential\/equatableexistential(accessmodifier:)","title":"EquatableExistential(accessModifier:)","type":"topic","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"EquatableExistential"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"role":"symbol","kind":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/Swift":{"title":"Swift","url":"\/documentation\/swiftconformableexistential\/swift","kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/Swift","role":"collection","abstract":[],"type":"topic"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EquatableEncodableExistential(accessModifier:)":{"title":"EquatableEncodableExistential(accessModifier:)","type":"topic","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Equatable & Encodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EquatableEncodableExistential(accessModifier:)","kind":"symbol","fragments":[{"text":"macro","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EquatableEncodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"text":"TypeAccessModifier","kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO"},{"text":"?)","kind":"text"}],"url":"\/documentation\/swiftconformableexistential\/equatableencodableexistential(accessmodifier:)","role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DecodableExistential(accessModifier:)":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DecodableExistential(accessModifier:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecodableExistential"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"type":"topic","url":"\/documentation\/swiftconformableexistential\/decodableexistential(accessmodifier:)","abstract":[{"text":"Synthetizes ","type":"text"},{"type":"codeVoice","code":"Decodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"text":"over existentials of the annotated protocol.","type":"text"}],"title":"DecodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/CodableExistential(accessModifier:)":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/CodableExistential(accessModifier:)","type":"topic","url":"\/documentation\/swiftconformableexistential\/codableexistential(accessmodifier:)","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"text":"CodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"text":"accessModifier","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","kind":"typeIdentifier","text":"TypeAccessModifier"},{"text":"?)","kind":"text"}],"abstract":[{"type":"text","text":"Synthetizes "},{"code":"Codable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"kind":"symbol","role":"symbol","title":"CodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/EncodableExistential(accessModifier:)":{"title":"EncodableExistential(accessModifier:)","url":"\/documentation\/swiftconformableexistential\/encodableexistential(accessmodifier:)","fragments":[{"text":"macro","kind":"keyword"},{"kind":"text","text":" "},{"text":"EncodableExistential","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Synthetizes "},{"type":"codeVoice","code":"Encodable"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"type":"text","text":" "},{"text":"over existentials of the annotated protocol.","type":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/EncodableExistential(accessModifier:)"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/DetailedDesign":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/DetailedDesign","abstract":[],"title":"Detailed design","type":"topic","kind":"article","url":"\/documentation\/swiftconformableexistential\/detaileddesign","role":"article"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/HashableEncodableExistential(accessModifier:)":{"kind":"symbol","title":"HashableEncodableExistential(accessModifier:)","identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/HashableEncodableExistential(accessModifier:)","type":"topic","fragments":[{"kind":"keyword","text":"macro"},{"text":" ","kind":"text"},{"kind":"identifier","text":"HashableEncodableExistential"},{"kind":"text","text":"("},{"kind":"externalParam","text":"accessModifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:17SwiftSyntaxExtras18TypeAccessModifierO","text":"TypeAccessModifier"},{"kind":"text","text":"?)"}],"url":"\/documentation\/swiftconformableexistential\/hashableencodableexistential(accessmodifier:)","abstract":[{"text":"Synthetizes ","type":"text"},{"code":"Hashable & Encodable","type":"codeVoice"},{"type":"text","text":" property wrapper variants (regular, mutable, optional, collection and their combinations)"},{"text":" ","type":"text"},{"type":"text","text":"over existentials of the annotated protocol."}],"role":"symbol"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/MetaCoding":{"navigatorTitle":[{"text":"MetaCoding","kind":"identifier"}],"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/MetaCoding","title":"MetaCoding","kind":"symbol","role":"symbol","abstract":[],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"MetaCoding"}],"url":"\/documentation\/swiftconformableexistential\/metacoding","type":"topic"},"doc://SwiftConformableExistential/documentation/SwiftConformableExistential/OptionalExistentialEncodingConfig":{"identifier":"doc:\/\/SwiftConformableExistential\/documentation\/SwiftConformableExistential\/OptionalExistentialEncodingConfig","title":"OptionalExistentialEncodingConfig","url":"\/documentation\/swiftconformableexistential\/optionalexistentialencodingconfig","abstract":[{"type":"text","text":"A way to tell encodable optional existential wrapper to encode nil."}],"navigatorTitle":[{"text":"OptionalExistentialEncodingConfig","kind":"identifier"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalExistentialEncodingConfig"}],"role":"symbol","kind":"symbol"}}}